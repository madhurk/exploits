package test.madhur.adapters;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.squareup.picasso.Picasso;

import java.util.ArrayList;
import java.util.List;

import test.madhur.model.Element;
import test.madhur.view.CatalogClickListener;
import test.madhur.view.R;

/**
 * Created by madhurkhandelwal on 8/6/15.
 */
public class CatalogAdapter extends RecyclerView.Adapter<CatalogAdapter.CatalogViewHolder> {

    private List<Element> items = new ArrayList<>();
    private Context context;

    private CatalogClickListener listener;

    public CatalogAdapter(Context context) {
        this.context = context;
    }

    @Override
    public CatalogViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {

        if (viewType == R.layout.item_catalog_list) {
            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_catalog_list, parent, false);
            CatalogViewHolder vh = new CatalogViewHolder(v, 0, listener);
            return vh;
        } else {
            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_catalog_separator, parent, false);
            CatalogViewHolder vh = new CatalogViewHolder(v, 0, listener);
            return vh;
        }
    }

    @Override
    public void onViewRecycled(CatalogViewHolder holder) {
        super.onViewRecycled(holder);
        Picasso.with(context).cancelRequest(holder.ivCourseImg);
        Picasso.with(context).cancelRequest(holder.ivUnivLogo);
    }

    @Override
    public void onBindViewHolder(CatalogViewHolder catalogViewHolder, int position) {
        Element course = items.get(position);
        catalogViewHolder.tvTitle.setText(course.getName());
        catalogViewHolder.tvDesc.setText(course.getShortDescription());

        if (course.getUniversityLogo() != null && course.getUniversityLogo().trim().length() > 0) {
            Picasso.with(context).load(course.getUniversityLogo()).into(catalogViewHolder.ivUnivLogo);
        } else {
            catalogViewHolder.ivUnivLogo.setImageDrawable(null);
        }

        if (course.getSmallIcon() != null && course.getSmallIcon().trim().length() > 0) {
            Picasso.with(context).load(course.getSmallIcon()).into(catalogViewHolder.ivCourseImg);
        } else {
            catalogViewHolder.ivCourseImg.setImageDrawable(null);
        }

        catalogViewHolder.setCourseId(course.getId());
    }

    @Override
    public int getItemViewType(int position) {
        return R.layout.item_catalog_list;
    }

    @Override
    public int getItemCount() {
        return items.size();
    }

    public void setItems(List<Element> items) {
        this.items = items;
    }

    public void setOnItemClickListener(CatalogClickListener listener) {
        this.listener = listener;
    }

    public static class CatalogViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private int courseId;
        public TextView tvTitle;
        public TextView tvDesc;
        public ImageView ivUnivLogo;
        public ImageView ivCourseImg;
        private CatalogClickListener listener;

        public CatalogViewHolder(View itemView, int courseId, CatalogClickListener listener) {
            super(itemView);
            tvTitle = (TextView) itemView.findViewById(R.id.tv_title);
            tvDesc = (TextView) itemView.findViewById(R.id.tv_desc);
            ivUnivLogo = (ImageView) itemView.findViewById(R.id.iv_univ_logo);
            ivCourseImg = (ImageView) itemView.findViewById(R.id.iv_course_image);

            this.listener = listener;
            this.courseId = courseId;
            itemView.setOnClickListener(this);
        }

        @Override
        public void onClick(View v) {
            if (listener != null) {
                listener.onCourseClick(courseId);
            }
        }

        public void setCourseId(int courseId) {
            this.courseId = courseId;
        }

    }

}
