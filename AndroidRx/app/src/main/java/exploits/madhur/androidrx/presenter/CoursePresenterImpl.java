package exploits.madhur.androidrx.presenter;


import exploits.madhur.androidrx.io.CatalogFetcher;
import exploits.madhur.androidrx.model.Catalog;
import exploits.madhur.androidrx.model.Element;
import exploits.madhur.androidrx.view.CourseView;
import rx.Observable;
import rx.Observer;
import rx.Subscription;
import rx.android.schedulers.AndroidSchedulers;
import rx.schedulers.Schedulers;

/**
 * Created by madhurkhandelwal on 8/6/15.
 */
public class CoursePresenterImpl implements CoursePresenter{

    private CourseView view;
    private CatalogFetcher fetcher;
    private Subscription subscription;

    public CoursePresenterImpl(CourseView view){
        this.view = view;
        fetcher = new CatalogFetcher();
    }

    @Override
    public void onScreenCreated(int courseId) {
        view.showProgress();

        Observable<Catalog> catalogObservable =  fetcher.getCourse(courseId);
        subscription = catalogObservable.subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread()).
                subscribe(new Observer<Catalog>() {
                    @Override
                    public void onCompleted() {
                    }

                    @Override
                    public void onError(Throwable e) {
                    }

                    @Override
                    public void onNext(Catalog catalog) {
                        view.hideProgress();
                        if(catalog != null && catalog.getElements() != null && catalog.getElements().size() > 0) {
                            Element course = catalog.getElements().get(0);
                            displayData(course);
                        }
                    }
                });

    }

    public void displayData(Element course) {
        view.displayTitle(course.getName());
        view.displayDesc(course.getShortDescription());
        view.displayImage(course.getLargeIcon());
        view.displayUnivLogo(course.getUniversityLogo());
        view.hideProgress();
    }

    @Override
    public void showProgress() {
        view.showProgress();
    }

    @Override
    public void hideProgress() {
        view.hideProgress();
    }

    @Override
    public void onScreenGone() {
        subscription.unsubscribe();
    }
}
